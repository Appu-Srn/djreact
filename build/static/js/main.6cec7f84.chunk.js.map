{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/layout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","href","description","content","FormItem","Form","CustomForm","handleFormSubmit","_callee","event","requestType","articleID","postObj","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","axios","defaults","xsrfHeaderName","xsrfCookieName","headers","Content-Type","Authorization","concat","_this","token","post","then","res","status","history","push","put","stop","this","_this2","es_form","onSubmit","label","input","name","placeholder","es_button","htmlType","btnText","React","Component","connect","state","ArticleList","articles","fetchArticles","get","setState","newProps","Article","ArticleDetail","article","handleDelete","match","params","delete","card","Object","assign","authSuccess","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","form","validateFields","err","values","onAuth","userName","password","errorMessage","message","getFieldDecorator","loading","indicator","className","Login_FormItem","rules","required","prefix","color","NavLink","to","WrappedNormalLoginForm","create","username","expirationDate","Date","getTime","setItem","catch","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","validator","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","Route","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","Link","padding","breadcrumb","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","BrowserRouter","containers_layout","routes","getItem","undefined","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6cec7f84.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { List, Avatar, Icon } from 'antd';\r\n\r\n\r\n\r\nconst IconText = ({ type, text }) => (\r\n    <span>\r\n        <Icon type={type} style={{ marginRight: 8 }} />\r\n        {text}\r\n    </span>\r\n);\r\n\r\n\r\n\r\nconst Articles = (props) => {\r\n    return (\r\n        <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n                onChange: (page) => {\r\n                    console.log(page);\r\n                },\r\n                pageSize: 3,\r\n            }}\r\n            dataSource={props.data}\r\n            footer={<div><b>ant design</b> footer part</div>}\r\n            renderItem={item => (\r\n                <List.Item\r\n                    key={item.title}\r\n                    actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\r\n                    extra={<img width={272} alt=\"logo\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\" />}\r\n                >\r\n                    <List.Item.Meta\r\n                        avatar={<Avatar src={item.avatar} />}\r\n                        title={<a href={item.href}>{item.title}</a>}\r\n                        description={item.description}\r\n                    />\r\n                    {item.content}\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n}\r\nexport default Articles;","import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n    handleFormSubmit = async (event, requestType, articleID) => {\r\n        event.preventDefault();\r\n\r\n        const postObj = {\r\n            title: event.target.elements.title.value,\r\n            content: event.target.elements.content.value\r\n        }\r\n\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios.defaults.xsrfCookieName = \"csrftoken\";\r\n        axios.defaults.headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Token ${this.props.token}`,\r\n        };\r\n\r\n        if (requestType === \"post\") {\r\n            await axios.post(\"http://127.0.0.1:8000/api/create/\", postObj)\r\n                .then(res => {\r\n                    if (res.status === 201) {\r\n                        this.props.history.push(`/`);\r\n                    }\r\n                })\r\n        } else if (requestType === \"put\") {\r\n            await axios.put(`http://127.0.0.1:8000/api/${articleID}/update/`, postObj)\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        this.props.history.push(`/`);\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    onSubmit={event =>\r\n                        this.handleFormSubmit(\r\n                            event,\r\n                            this.props.requestType,\r\n                            this.props.articleID\r\n                        )\r\n                    }\r\n                >\r\n                    <FormItem label=\"Title\">\r\n                        <Input name=\"title\" placeholder=\"Put a title here\" />\r\n                    </FormItem>\r\n                    <FormItem label=\"Content\">\r\n                        <Input name=\"content\" placeholder=\"Enter some content ...\" />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            {this.props.btnText}\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(CustomForm);","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Articles from \"../components/Article\";\r\nimport CustomForm from \"../components/Form\";\r\n\r\n\r\nclass ArticleList extends React.Component {\r\n    state = {\r\n        articles: []\r\n    };\r\n\r\n    fetchArticles = () => {\r\n        axios.get(\"http://127.0.0.1:8000/api/\").then(res => {\r\n            this.setState({\r\n                articles: res.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchArticles();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.token) {\r\n            this.fetchArticles();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Articles data={this.state.articles} /> <br />\r\n                <h2> Create an article </h2>\r\n                <CustomForm requestType=\"post\" articleID={null} btnText=\"Create\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleList;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Card } from \"antd\";\r\nimport CustomForm from \"../components/Form\";\r\n\r\n\r\nclass ArticleDetail extends React.Component {\r\n    state = {\r\n        article: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        const articleID = this.props.match.params.articleID;\r\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`).then(res => {\r\n            this.setState({\r\n                article: res.data\r\n            });\r\n        });\r\n    }\r\n\r\n    handleDelete = event => {\r\n        event.preventDefault();\r\n        const articleID = this.props.match.params.articleID;\r\n        axios.defaults.headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Token ${this.props.token}`\r\n        };\r\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}/delete/`)\r\n            .then(res => {\r\n                if (res.status === 204) {\r\n                    this.props.history.push(`/`);\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title={this.state.article.title}>\r\n                    <p> {this.state.article.content} </p>\r\n                </Card>\r\n                <CustomForm\r\n                    {...this.props}\r\n                    token={this.props.token}\r\n                    requestType=\"put\"\r\n                    articleID={this.props.match.params.articleID}\r\n                    btnText=\"Update\"\r\n                />\r\n                <form onSubmit={this.handleDelete}>\r\n                    <Button type=\"danger\" htmlType=\"submit\">\r\n                        Delete\r\n              </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ArticleDetail);\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = token => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\r\n            username: username,\r\n            password: password\r\n        })\r\n            .then(res => {\r\n                const token = res.data.key;\r\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout(3600));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\r\n            username: username,\r\n            email: email,\r\n            password1: password1,\r\n            password2: password2\r\n        })\r\n            .then(res => {\r\n                const token = res.data.key;\r\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout(3600));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (token === undefined) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n}","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\r\nimport { Form, Icon, Input, Button, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst FormItem = Form.Item;\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\r\n\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.props.onAuth(values.userName, values.password);\r\n                this.props.history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                {errorMessage}\r\n                {\r\n                    this.props.loading ?\r\n\r\n                        <Spin indicator={antIcon} />\r\n\r\n                        :\r\n\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n\r\n                            <FormItem>\r\n                                {getFieldDecorator('userName', {\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                                )}\r\n                            </FormItem>\r\n\r\n                            <FormItem>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                )}\r\n                            </FormItem>\r\n\r\n                            <FormItem>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                                    Login\r\n                    </Button>\r\n                                Or\r\n                    <NavLink\r\n                                    style={{ marginRight: '10px' }}\r\n                                    to='/signup/'> signup\r\n                    </NavLink>\r\n                            </FormItem>\r\n                        </Form>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                this.props.onAuth(\r\n                    values.userName,\r\n                    values.email,\r\n                    values.password,\r\n                    values.confirm\r\n                );\r\n                this.props.history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    }\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n\r\n                <FormItem>\r\n                    {getFieldDecorator('userName', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{\r\n                            type: 'email', message: 'The input is not valid E-mail!',\r\n                        }, {\r\n                            required: true, message: 'Please input your E-mail!',\r\n                        }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{\r\n                            required: true, message: 'Please input your password!',\r\n                        }, {\r\n                            validator: this.validateToNextPassword,\r\n                        }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [{\r\n                            required: true, message: 'Please confirm your password!',\r\n                        }, {\r\n                            validator: this.compareToFirstPassword,\r\n                        }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                        Signup\r\n        </Button>\r\n                    Or\r\n        <NavLink\r\n                        style={{ marginRight: '10px' }}\r\n                        to='/login/'> login\r\n        </NavLink>\r\n                </FormItem>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport ArticleList from \"./containers/ArticleListView\";\r\nimport ArticleDetail from \"./containers/ArticleDetailView\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\n\r\nconst BaseRouter = () => (\r\n    <div>\r\n        <Route exact path=\"/\" component={ArticleList} />{\" \"}\r\n        <Route exact path=\"/articles/:articleID/\" component={ArticleDetail} />{\" \"}\r\n        <Route exact path=\"/login/\" component={Login} />{\" \"}\r\n        <Route exact path=\"/signup/\" component={Signup} />{\" \"}\r\n\r\n    </div>\r\n);\r\n\r\nexport default BaseRouter;","\r\n\r\nimport React from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nclass CustomLayout extends React.Component {\r\n    render() {\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <div className=\"logo\" />\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['2']}\r\n                        style={{ lineHeight: '64px' }}\r\n                    >\r\n\r\n                        {\r\n                            this.props.isAuthenticated ?\r\n\r\n                                <Menu.Item key=\"2\" onClick={this.props.logout}>\r\n                                    Logout\r\n                    </Menu.Item>\r\n\r\n                                :\r\n\r\n                                <Menu.Item key=\"2\">\r\n                                    <Link to=\"/login\">Login</Link>\r\n                                </Menu.Item>\r\n                        }\r\n\r\n                        <Menu.Item key=\"1\">\r\n                            <Link to=\"/\">Posts</Link>\r\n                        </Menu.Item>\r\n\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\r\n                        <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    Ant Design ©2016 Created by Ant UED\r\n                </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\n\nimport CustomLayout from './containers/layout';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}